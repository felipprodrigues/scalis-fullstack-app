// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bankAccount   BankAccount[]
}

model BankAccount {
  accountId     String @id @default(uuid())
  userId        String
  accountType   String
  accountNumber String

  // Relates to the User table
  user User @relation(fields: [userId], references: [id])

  // Relates to the Transaction table
  sourceTransaction      Transaction[] @relation(name: "sourceAccount")
  destinationTransaction Transaction[] @relation(name: "destinationAccount")
}

model Transaction {
  transactionId        String   @id @default(uuid())
  transactionAccountId String? // origem da transação
  destinationAccountId String? // destino da transação
  amount               Int
  transactionType      String
  timestamp            DateTime @default(now())

  // Relates to the Account table
  sourceAccount      BankAccount? @relation(name: "sourceAccount", fields: [transactionAccountId], references: [accountId])
  destinationAccount BankAccount? @relation(name: "destinationAccount", fields: [destinationAccountId], references: [accountId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
